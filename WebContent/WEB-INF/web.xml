<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>pro21</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!--
  		web.xml을 다음과 같이 작성
  		
  		한 개의 XML파일에서 모든 빈을 설정하면 복잡해서 관리하기 어려우므로
  		빈의 종류에 따라 XML파일에 나누어 설정한다. 그러면 톰캣 실행시 web.xml의
  		작성 해 놓은 스프링 프레임워크에서 제공해주는 ContextLoaderListener클래스를 이용해
  		빈 설정 XML파일들을 현재 web.xml에 로딩시켜 준다. 
   -->
   <!-- 여러 xml설정 파일들을 읽어 들이기 위해 스프링의 ContextLoaderListener 클래스에 대한 객체 설정 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 톰캣이 웹 애플리케이션 실행시 ContextLoaderListener로 해당 위치의 설정 파일을 읽어 들인다. -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		/WEB-INF/config/action-service.xml
  		/WEB-INF/config/action-dataSource.xml
  	</param-value>
  </context-param>
  
  
  
  <!-- 
  	  web.xml을 다음과 같이 작성 합니다.
  	  
웹브라우저의 주소창에 주소  *.do 로 요청하면 
스프링의 DispatcherServlet클래스가 요청을 받을 수있게 설정
또한 <load-on-startup>1</load-on-startup>태그를 이용해 
톰캣이 프로젝트 실행시.. 미리 스프링의  DispatcherServlet클래스를 메모리에 로드합니다. 

참고 :   <load-on-startup>태그영역의 값이 1이상이면  톰캣 실행시 
	    DispatcherServlet클래스를 미리 톰캣 메모리에 로드 합니다.
	    
	    <load-on-startup>태그영역의 값을 지정 하지 않거나 음수로 지정하면
	        웹브라우저에서 요청시 톰캣 메모리에 로드 한다.
   -->
   
  <servlet>
  	<servlet-name>action</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>action</servlet-name>	
  	<url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  
</web-app>







